# Based on tutorial: https://autobencoder.com/2020-08-24-conda-actions/

name: Tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DISPLAY: ":99"
  BLUESKY_DEBUG_CALLBACKS: 1


jobs:
  test:
    defaults:
      run:
        shell: bash -l {0}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      max-parallel: 5
    steps:
    - uses: actions/checkout@v4
    - uses: prefix-dev/setup-pixi@v0.9.0
      with:
        pixi-version: v0.53.0
        cache: true
    - run: |
        pixi run test-haven
        # pixi run test-haven src/haven/tests/test_aerotech.py src/haven/tests/test_align_motor.py src/haven/tests/test_align_slits.py src/haven/tests/test_aperture_slits.py src/haven/tests/test_aps.py src/haven/tests/test_aravis.py src/haven/tests/test_asymmotron.py src/haven/tests/test_auto_gain_plan.py
        # pixi run test-haven src/haven/tests/test_beamline_manager.py src/haven/tests/test_blade_slits.py src/haven/tests/test_bss.py
        # pixi run test-haven src/haven/tests/test_calibrate_plan.py src/haven/tests/test_catalog.py src/haven/tests/test_delay.py src/haven/tests/test_eiger.py src/haven/tests/test_energy_ranges.py src/haven/tests/test_energy_xafs_scan.py src/haven/tests/test_fluorescence_detectors.py src/haven/tests/test_fly_plans.py
        # pixi run test-haven  src/haven/tests/test_heater.py src/haven/tests/test_iconfig.py src/haven/tests/test_iconfig.toml src/haven/tests/test_instrument.py src/haven/tests/test_instrument_registry.py src/haven/tests/test_ion_chamber.py src/haven/tests/test_labjack.py src/haven/tests/test_lambda.py src/haven/tests/test_mirrors.py
        # pixi run test-haven  src/haven/tests/test_monochromator.py src/haven/tests/test_motor.py src/haven/tests/test_open_shutters.py src/haven/tests/test_positioner.py src/haven/tests/test_power_supply.py src/haven/tests/test_preprocessors.py src/haven/tests/test_record_dark_current_plan.py src/haven/tests/test_robot.py src/haven/tests/test_robot_transfer_sample.py
        # pixi run test-haven src/haven/tests/test_run_engine.py src/haven/tests/test_save_motor_positions.py
        # pixi run test-haven src/haven/tests/test_run_engine.py src/haven/tests/test_save_motor_positions.py src/haven/tests/test_scaler.py src/haven/tests/test_set_energy.py src/haven/tests/test_shutter.py src/haven/tests/test_signal.py src/haven/tests/test_srs570.py
        # pixi run test-haven src/haven/tests/test_stages.py src/haven/tests/test_table.py src/haven/tests/test_tiled_writer.py src/haven/tests/test_undulator.py src/haven/tests/test_utils.py src/haven/tests/test_vacuum_devices.py src/haven/tests/test_xia_pfcu.py src/haven/tests/test_xspress.py
    # - name: Install micromamba
    #   uses: mamba-org/setup-micromamba@v1
    #   with:
    #     environment-file: environment.yml
    # - name: Install haven
    #   run: pip install -e ".[dev,gui]"
    # - name: Environment info
    #   run: |
    #     env
    #     micromamba info
    #     micromamba list
    #     pip freeze
    # - name: Check syntax
    #   run: |
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    # - name: Check for unused imports
    #   run: |
    #     flake8 . --count --select=F401
    # - name: Enforce formatting with black
    #   run: |
    #     black --check src/
    # - name: Enforce import ordering with isort
    #   run: |
    #     isort --check src/
    # - name: Haven tests with pytest in Xvfb
    #   run: python -m pytest src/haven -vv
    # - name: Firefly tests with pytest in Xvfb
    #   run: xvfb-run python -m pytest src/firefly -vv --exitfirst
    # - name: Static type checking
    #   run: mypy
    # - name: Reporting linting
    #   run: |
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics	
    # - name: Licensing
    #   run: |
    #     find src/ -type f -name "*.py" -exec grep -H -c 'Copyright Â© 2023, UChicago Argonne, LLC' {} \; | grep 0$ | cut -d':' -f1
