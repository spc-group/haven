[project]
name = "haven-spc"
version = "2025.02.1"
authors = [
  { name="Mark Wolfman", email="wolfman@anl.gov" },
]
description = "Tools and GUI for running the spectroscopy group beamlines at the Advanced Photon Source."
readme = "README.md"
# requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Topic :: Scientific/Engineering",
    "Topic :: System :: Hardware",
]
license = "BSD-3-clause"
keywords = ["synchrotron", "xray", "bluesky"]
dependencies = [
    # Managed by pixi
    # To-do: what dependencies do we actually need for e.g. pip install.
]

[project.urls]
"Homepage" = "https://haven-spc.readthedocs.io/en/latest/"
"Bug Tracker" = "https://github.com/spc-group/haven/issues"

[project.entry-points."pydm.data_plugin"]
HavenPlugin = "firefly.pydm_plugin:HavenPlugin"

[project.scripts]
haven_config = "haven._iconfig:print_config_value"

[project.gui-scripts]
firefly = "firefly.launcher:main"
firefly_cameras = "firefly.launcher:cameras"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.hatch.build.targets.wheel]
packages = ["src/haven", "src/firefly", "src/haven_qserver"]

[tool.isort]
profile = "black"

[tool.ruff.lint]
select = ["E9", "F63", "F7", "F82", "F401"]

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "src/haven/_version.py"
versionfile_build = "haven/_version.py"
tag_prefix = "haven-"
parentdir_prefix = "haven-"

[tool.mypy]
files = [
    'src/firefly/bss.py', 'src/firefly/tests/test_bss_display.py',
    'src/firefly/energy.py', 'src/firefly/tests/test_energy_display.py',
    'src/firefly/devices/axilon_monochromator.py', 'src/firefly/tests/test_monochromator.py',
    'src/firefly/devices/undulator.py', 'src/firefly/tests/test_undulator.py',
    'src/firefly/plans/count.py', 'src/firefly/tests/test_count_window.py',
    'src/firefly/plans/duration_label.py', 'src/firefly/tests/test_duration_label.py',
    'src/firefly/plans/metadata.py', 'src/firefly/tests/test_metadata_widget.py',
    'src/firefly/plans/move_motor_window.py', 'src/firefly/tests/test_move_motor_window.py',
    'src/firefly/plans/regions.py', 'src/firefly/tests/test_regions.py',
    'src/firefly/plans/plan_display.py', 'src/firefly/tests/test_plan_display.py',
    'src/firefly/plans/line_scan.py', 'src/firefly/tests/test_line_scan_window.py',
    'src/firefly/plans/grid_scan.py', 'src/firefly/tests/test_grid_scan_window.py',
    'src/firefly/plans/relative_checkbox.py', 'src/firefly/tests/test_relative_checkbox.py',
    'src/firefly/plans/util.py',
    'src/firefly/plans/xafs_scan.py', 'src/firefly/tests/test_xafs_scan.py',
    'src/haven/run_engine.py', 'src/haven/tests/test_run_engine.py',
    'src/haven/devices/aerotech.py', "src/haven/tests/test_aerotech.py",
    'src/haven/devices/asymmotron.py', "src/haven/tests/test_asymmotron.py",
    "src/haven/bss.py", "src/haven/tests/test_bss.py",
    'src/haven/devices/blade_slits.py', "src/haven/tests/test_blade_slits.py",
    'src/haven/devices/ion_chamber.py', "src/haven/tests/test_ion_chamber.py",
    'src/haven/devices/motor.py', "src/haven/tests/test_motor.py",
    'src/haven/plans/_robot_transfer_sample.py', "src/haven/tests/test_robot_transfer_sample.py",
    'src/haven/devices/undulator.py', "src/haven/tests/test_undulator.py",
    'src/haven/devices/vacuum.py', 'src/haven/tests/test_vacuum_devices.py',
    'src/haven/plans/_calibrate.py', 'src/haven/tests/test_calibrate_plan.py',
    'src/haven/plans/_set_energy.py', 'src/haven/tests/test_set_energy.py',
    'src/haven/plans/_xafs_scan.py', 'src/haven/plans/_energy_scan.py', 'src/haven/tests/test_energy_xafs_scan.py',
    'src/haven/plans/_fly.py', 'src/haven/tests/test_fly_plans.py',
    'src/haven/positioner.py', "src/haven/tests/test_positioner.py",
]
follow_imports = "skip"
follow_untyped_imports = true
