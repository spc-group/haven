[project]
name = "haven-spc"
version = "2025.02.1"
authors = [
  { name="Mark Wolfman", email="wolfman@anl.gov" },
]
description = "Tools and GUI for running the spectroscopy group beamlines at the Advanced Photon Source."
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Topic :: Scientific/Engineering",
    "Topic :: System :: Hardware",
]
license = "BSD-3-clause"
keywords = ["synchrotron", "xray", "bluesky"]
dependencies = [
    "aioca",
    "aiokafka==0.12.0",
    "apsbits",
    "apsbss==1.5.6",
    "apstools==1.7.3",
    "bluesky==1.14.0",
    "bluesky-adaptive",
    "bluesky-queueserver==0.0.22",
    "bluesky-queueserver-api==0.0.12",
    "guarneri==0.2.0",
    "httpx[http2]",
    "mergedeep",
    "odfpy",
    "ophyd==1.10.5",
    # "ophyd-async==0.10.0",
    # We need this ophyd-async development branch until a new release (>0.10.0a4)
    "ophyd-async @ git+https://github.com/bluesky/ophyd-async@f652399e24c045b0f6c675d173c1ef588f909062",
    "pint",
    "pcdsdevices",
    "rich",
    "stamina",
    "tiled[client]==0.1.0b27",
    "tomlkit",
    "xraydb>=4.5.0",
    "xrayutilities",
]

[project.optional-dependencies]
dev = [
    "black",
    "pytest",
    "asynctest",
    "build",
    "twine",
    "pytest-httpx",
    "time-machine",
    "pytest-mock",
    "pytest-qt",
    "pytest-xvfb",
    "flake8",
    "isort",
    "sphinx",
    "autoapi",
    "nbsphinx",
    "graphviz",
    "sphinxcontrib-napoleon",
    "pytest-asyncio",
    "pytest_httpx",
    "scipy-stubs",
    "mypy"
]
gui = [
    "qtawesome>=1.4.0",
    "pydm==1.25.2",
    "pyqtgraph",
    "qasync",
    "tiled[all]",
    "bluesky-widgets",
    "typhos>=3.1.0",  # need the find_signal method on the SignalConnection()
]

[project.urls]
"Homepage" = "https://haven-spc.readthedocs.io/en/latest/"
"Bug Tracker" = "https://github.com/spc-group/haven/issues"

[project.entry-points."pydm.data_plugin"]
HavenPlugin = "firefly.pydm_plugin:HavenPlugin"

[project.scripts]
haven_config = "haven._iconfig:print_config_value"
haven_queueserver = "queueserver.launch_queueserver:launch_queueserver"
databroker_consumer = "queueserver.databroker_consumer:main"
tiled_consumer = "queueserver.tiled_consumer:main"
"export-runs" = "haven.export:main"

[project.gui-scripts]
firefly = "firefly.launcher:main"
firefly_cameras = "firefly.launcher:cameras"

[tool.setuptools.package-data]
firefly = ["firefly.qss"]
# This might be necessary in the future for BITS compatibility
# "" = "src"

[tool.setuptools_scm]

[build-system]
requires = ["setuptools>=61.0", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[tool.isort]
profile = "black"

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "src/haven/_version.py"
versionfile_build = "haven/_version.py"
tag_prefix = "haven-"
parentdir_prefix = "haven-"

[tool.mypy]
files = [
    'src/firefly/energy.py', 'src/firefly/tests/test_energy_display.py',
    'src/firefly/devices/axilon_monochromator.py', 'src/firefly/tests/test_monochromator.py',
    'src/firefly/devices/undulator.py', 'src/firefly/tests/test_undulator.py',
    'src/haven/run_engine.py', 'src/haven/tests/test_run_engine.py',
    'src/haven/devices/asymmotron.py', "src/haven/tests/test_asymmotron.py",
    'src/haven/devices/ion_chamber.py', "src/haven/tests/test_ion_chamber.py",
    'src/haven/devices/motor.py', "src/haven/tests/test_motor.py",
    'src/haven/devices/undulator.py', "src/haven/tests/test_undulator.py",
    'src/haven/devices/vacuum.py', 'src/haven/tests/test_vacuum_devices.py',
    'src/haven/plans/_calibrate.py', 'src/haven/tests/test_calibrate_plan.py',
    'src/haven/plans/_set_energy.py', 'src/haven/tests/test_set_energy.py',
    'src/haven/plans/_xafs_scan.py', 'src/haven/plans/_energy_scan.py', 'src/haven/tests/test_energy_xafs_scan.py',
    'src/haven/positioner.py', "src/haven/tests/test_positioner.py",
]
follow_imports = "skip"
follow_untyped_imports = true