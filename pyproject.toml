[project]
name = "haven-spc"
version = "2025.02.1"
authors = [
  { name="Mark Wolfman", email="wolfman@anl.gov" },
]
description = "Tools and GUI for running the spectroscopy group beamlines at the Advanced Photon Source."
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Topic :: Scientific/Engineering",
    "Topic :: System :: Hardware",
]
license = "BSD-3-clause"
keywords = ["synchrotron", "xray", "bluesky"]
dependencies = [
    # Managed by pixi
    # To-do: what dependencies do we actually need for e.g. pip install.
]


[project.urls]
"Homepage" = "https://haven-spc.readthedocs.io/en/latest/"
"Bug Tracker" = "https://github.com/spc-group/haven/issues"

[project.entry-points."pydm.data_plugin"]
HavenPlugin = "firefly.pydm_plugin:HavenPlugin"

[project.scripts]
haven_config = "haven._iconfig:print_config_value"
haven_qserver = "haven_qserver.launch_queueserver:launch_queueserver"
databroker_consumer = "haven_qserver.databroker_consumer:main"
tiled_consumer = "haven_qserver.tiled_consumer:main"

[project.gui-scripts]
firefly = "firefly.launcher:main"
firefly_cameras = "firefly.launcher:cameras"

[tool.setuptools.package-data]
firefly = ["firefly.qss"]
# This might be necessary in the future for BITS compatibility
# "" = "src"

[tool.setuptools_scm]

[build-system]
requires = ["setuptools>=61.0", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[tool.isort]
profile = "black"

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "src/haven/_version.py"
versionfile_build = "haven/_version.py"
tag_prefix = "haven-"
parentdir_prefix = "haven-"

[tool.mypy]
files = [
    'src/firefly/bss.py', 'src/firefly/tests/test_bss_display.py',
    'src/firefly/energy.py', 'src/firefly/tests/test_energy_display.py',
    'src/firefly/devices/axilon_monochromator.py', 'src/firefly/tests/test_monochromator.py',
    'src/firefly/devices/undulator.py', 'src/firefly/tests/test_undulator.py',
    'src/firefly/plans/count.py', 'src/firefly/tests/test_count_window.py',
    'src/firefly/plans/duration_label.py', 'src/firefly/tests/test_duration_label.py',
    'src/firefly/plans/metadata.py', 'src/firefly/tests/test_metadata_widget.py',
    'src/firefly/plans/move_motor_window.py', 'src/firefly/tests/test_move_motor_window.py',
    'src/firefly/plans/regions.py', 'src/firefly/tests/test_regions.py',
    'src/firefly/plans/plan_display.py', 'src/firefly/tests/test_plan_display.py',
    'src/firefly/plans/line_scan.py', 'src/firefly/tests/test_line_scan_window.py',
    'src/firefly/plans/grid_scan.py', 'src/firefly/tests/test_grid_scan_window.py',
    'src/firefly/plans/relative_checkbox.py', 'src/firefly/tests/test_relative_checkbox.py',
    'src/firefly/plans/util.py',
    'src/firefly/plans/xafs_scan.py', 'src/firefly/tests/test_xafs_scan.py',
    'src/haven/run_engine.py', 'src/haven/tests/test_run_engine.py',
    'src/haven/devices/asymmotron.py', "src/haven/tests/test_asymmotron.py",
    "src/haven/bss.py", "src/haven/tests/test_bss.py",
    'src/haven/devices/blade_slits.py', "src/haven/tests/test_blade_slits.py",
    'src/haven/devices/ion_chamber.py', "src/haven/tests/test_ion_chamber.py",
    'src/haven/devices/motor.py', "src/haven/tests/test_motor.py",
    'src/haven/plans/_robot_transfer_sample.py', "src/haven/tests/test_robot_transfer_sample.py",
    'src/haven/devices/undulator.py', "src/haven/tests/test_undulator.py",
    'src/haven/devices/vacuum.py', 'src/haven/tests/test_vacuum_devices.py',
    'src/haven/plans/_calibrate.py', 'src/haven/tests/test_calibrate_plan.py',
    'src/haven/plans/_set_energy.py', 'src/haven/tests/test_set_energy.py',
    'src/haven/plans/_xafs_scan.py', 'src/haven/plans/_energy_scan.py', 'src/haven/tests/test_energy_xafs_scan.py',
    'src/haven/positioner.py', "src/haven/tests/test_positioner.py",
]
follow_imports = "skip"
follow_untyped_imports = true

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
haven-spc = { path = ".", editable = true }
apsbits = "*"
apsbss = "*"
apstools = "*"  # ==1.7.3",
guarneri = "*"  # ==0.2.0",
ophyd-async = "==0.10.1"
# # Temprary commit until a new release is available, then back to conda dependencies
# #   https://github.com/bluesky/bluesky-queueserver/pull/329
# # "bluesky-queueserver @ git+https://github.com/dmgav/bluesky-queueserver@ophyd-async",
bluesky-adaptive = "*"
bluesky-queueserver = {"git" = "https://github.com/bluesky/bluesky-queueserver"}
bluesky-queueserver-api = "*"  #  = ">=0.0.12"

[tool.pixi.dependencies]
aioca = "*"
aiokafka = "*"  # ==0.12.0",
bluesky = "*"  #==1.14.2",
# bluesky-adaptive = "*"
# bluesky-queueserver" = ">=0.0.23",
# bluesky-queueserver-api = "*"  #  = ">=0.0.12"
bluesky-tiled-plugins = ">=2.0.0b64"
httpx = "*"
ipython = "*"
lmfit = "*"
mergedeep = "*"
ophyd = "*"  # =1.10.7",
pint = "*"
pcdsdevices = "*"
rich = "*"
scipy = "*"
tiled = "==0.1.0b29"
stamina = "*"
tomlkit = "*"
xraydb = ">=4.5.0"
xrayutilities = "*"


[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev", "gui"], solve-group = "default" }
gui = { features = ["gui"], solve-group = "default" }

[tool.pixi.feature.dev.dependencies]
"pytest" = "*"
"pytest-httpx" = "*"
"pytest-mock" = "*"
"pytest-qt" = "*"
"pytest-xvfb" = "*"
"pytest-asyncio" = "*"
"black" = "*"
"twine" = "*"
"time-machine" = "*"
"flake8" = "*"
"isort" = "*"
"sphinx" = "*"
"nbsphinx" = "*"
"graphviz" = "*"
"sphinxcontrib-napoleon" = "*"
"scipy-stubs" = "*"
"mypy" = "*"

[tool.pixi.feature.dev.pypi-dependencies]
autoapi = "*"
build = "*"


[tool.pixi.feature.dev.tasks]
test-haven = "pytest src/haven"
test-firefly = "pytest src/firefly"
check-types = "mypy"
format = "black src"
isort = "isort src"
lint = "flake8 --count --select=E9,F63,F7,F82,F401 --show-source --statistics src/"


[tool.pixi.feature.gui.dependencies]
qtawesome = ">=1.4.0"
pydm = "==1.25.2"
pyqtgraph = "*"
qasync = "*"
bluesky-widgets = "*"
typhos = ">=3.1.0"  # need the find_signal method on the SignalConnection()
qt = ">=5.15"
pyqt = ">=5.15"


[tool.pixi.feature.gui.tasks]
firefly = "firefly"


[tool.pixi.tasks]
test-all = [{ task = "lint" }, { task = "format" }, { task = "isort" },{ task = "check-types" }, { task = "test-haven" }, { task = "test-firefly" }]
ipython = "ipython -i ./src/haven/ipython_startup.ipy"
