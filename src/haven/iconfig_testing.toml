area_detector_root_path = "/tmp"

# Metadata from the beamline scheduling system (BSS)
####################################################

[bss]
uri = "https://localhost:12345/dm"
beamline = "255-ID-Z"
station_name = "255IDZ"
username = "s255idzuser"
password = "abc123"


##############
# Acquisition
##############

# This section describes how to connect to the queueserver and how
# queueserver data reaches the database. It does not generate any
# devices, but is intended to be read by the Firefly GUI application
# to determine how to interact with the queue.

[queueserver]
redis_addr = "localhost:6379"

[tiled]
default_catalog = "testing"
cache_filepath = "/tmp/tiled/http_response_cache.db"
writer_profile = "<profile_name>"
# writer_backup_directory = "/tmp/tiled_writer_backup"
# writer_batch_size = 5
# In most cases, *api_key* is not necessary. Only used by the now
# deprecated Tiled consumer.
# api_key = ""

[ RUN_ENGINE ]
USE_PROGRESS_BAR = true

[ RUN_ENGINE.DEFAULT_METADATA ]
# Additional metadata to inject in every scan
facility = "Advanced Photon Source"
beamline = "SPC Beamline (sector unknown)"
xray_source = "2.8â€¯mm planar undulator"


#################
# Device support
#################

[ synchrotron ]
name = "advanced_photon_source"

# PSS Shutters
# ============

# Each PSS shutter has optional arguments *allow_open* and
# *allow_close*. These determine whether Ophyd will allow the shutter
# to open and close, but has no relationship to EPICS permissions.

[[ pss_shutter ]]
name = "front_end_shutter"
prefix = "S255ID-PSS:FES:"
allow_close = false
# allow_open = true  # Default

[[ pss_shutter ]]
name = "hutch_shutter"
prefix = "S255ID-PSS:SCS:"
# allow_open = true  # Default
# allow_close = true  # Default


# Energy Positioners
# =================

[[ monochromator ]]
name = "mono"
prefix = "mono_ioc:"

[[ undulator ]]
name = "undulator"
prefix = "id_ioc:"
offset_pv = "mono_ioc:offset"


# Ion chambers
# ============

[[ ion_chamber ]]
scaler_prefix = "255idcVME:3820:"
scaler_channel = 2
preamp_prefix = "255idc:SR03:"
voltmeter_prefix = "255idc:LabJackT7_1:"
voltmeter_channel = 1
# From V2F100: Fmax / Vmax
counts_per_volt_second = 10e6
name = "I0"


# Scalers
# =======
# 
# These definitions are not for using ion chambers, but for if the
# scaler is needed as an independent device. The ion chamber
# defintions include a scaler channel.

[[ scaler ]]
name = "scaler_1"
prefix = "255idcVME:3820:"
channels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]


# Motors
# ======

[[ motors ]]
# Creating multiple motors with a special short-hand
m1 = "255idcVME:m1"
m2 = "255idcVME:m2"

[[ motor ]]
# Indivudal motors can also be created like so
name = "m1"
prefix = "255idcVME:m1"

# Sample stages
# =============

[[ xy_stage ]]
vertical_prefix = "255idcVME:m13"
horizontal_prefix = "255idcVME:m14"

# Aerotech controller support disabled until new controllers are ready
# [aerotech_stage.aerotech]
# prefix = "255idc"
# delay_prefix = "255idc:DG645"
# pv_vert = ":m1"
# pv_horiz = ":m2"


# External high-voltage power supplies
# ====================================

[[ power_supply ]]
# An NHQ203M power supply
name = "NHQ01"
prefix = "ps_ioc:NHQ01"
ch_num = 1


# Slits
# =====

[[ blade_slits ]]
# A set of 4 slits, two for each direction
name = "KB_slits"
prefix = "vme_crate_ioc:KB"


[[ aperture_slits ]]
# A single rotating aperture slit, like the 25-ID whitebeam slits
name = "whitebeam_slits"
prefix = "255ida:slits:US:"


# KB Mirrors
# ==========
#
# A combined set of vertical and horizontal KB mirrors. Optionally,
# bender motors can also be given.

[[ kb_mirrors ]]
name = "kb_upstream"
prefix = "255idcVME:KB:"
horiz_upstream_motor = "255idcVME:KB:m35"
horiz_downstream_motor = "255idcVME:KB:m36"
vert_upstream_motor = "255idcVME:KB:m48"
vert_downstream_motor = "255idcVME:KB:m49"
# # Optional bender motors
# horiz_upstream_bender: str = "255idcVME:KB:m52",
# horiz_downstream_bender: str = "255idcVME:KB:m53",
# vert_upstream_bender: str = "255idcVME:KB:m61",
# vert_downstream_bender: str = "255idcVME:KB:m62",


# High-heat-load mirrors
# ======================
#
# A single-bounce mirror designed for white-beam. Optionally, also
# bendable with a single motor.

[[ high_heat_load_mirror ]]
name = "ORM1"
prefix = "25ida:ORM1:"
bendable = false

[[ high_heat_load_mirror ]]
name = "ORM2"
prefix = "25ida:ORM2:"
bendable = true


# Table
# =====
# An optical table with a specific configuration of motors

[[ table ]]
name = "downstream_table"
# # Optional, either will use vertical motor, or separate upstream/downstream
# vertical_prefix = "255idcVME:m24"
# horizontal_prefix = "255idcVME:m23"
# upstream_motor_prefix = "255idcVME:m21"
# downstream_motor_prefix = "255idcVME:m22"
# pseudo_motor_prefix = "255idcVME:table_ds:"
# transformprefix = "255idcVME:table_ds_trans:"

[[ table ]]
# An optical table with one vertical motor and one horizontal motor
vertical_prefix = "255idcVME:m26"
horizontal_prefix = "255idcVME:m25"


# Area detectors
# ==============
#
# Area detectors includes gigE vision cameras.

[[ sim_detector ]]
name = "sim_detector"
prefix = "255idSimDet:"

[[ camera ]]
# An Aravis-based area detector
name = "lerix_mono_flag"
prefix = "255idARV3:"

[[ eiger ]]
name = "eiger_500k"
prefix = "255idEiger:"

[[ lambda ]]
name = "lambda_250K"
prefix = "255idLambda250K:"

# What follows is the style for threaded ophyd area detectors. This is
# deprecated and will be removed in the future.

[[ area_detector ]]
name = "sim_det"
prefix = "255idSimDet:"
device_class = "SimDetector"
fake = false


# Heaters and Furnaces
# ====================

[[ capillary_heater ]]
name = "capillary_heater"
prefix = "255idptc10:"


# Robots
# ======

[[ robot ]]
name="austin"
prefix = "255idAustin"


# Managed IOC control PVs
# =======================

[[ beamline_manager ]]
name = "GLaDOS"
prefix = "255idc:glados:"
iocs = {ioc255idb = "ioc255idb:", ioc255idc = "ioc255idc:"}


# Fluorescence Detectors
# ======================

# [[ dxp ]]
# name = "vortex_me4"
# prefix = "vortex_me4:"
# num_elements = 4

# [[ dxp ]]
# name = "canberra_Ge7"
# prefix = "20xmap8:"
# num_elements = 4

[[ xspress3 ]]
name = "vortex_me4"
prefix = "vortex_me4_xsp:"


# Filter boxes
# ============

[[ pfcu4 ]]
name = "filter_bank0"
prefix = "255idc:pfcu0:"

[[ filter_bank0 ]]
class = "pfcu4"
prefix = "255idc:pfcu0:"


[[ pfcu4 ]]
name = "filter_bank1"
prefix = "255idc:pfcu1:"
shutters = [[2, 3]]


# Asymmetric Analyzer
# ===================

[[ analyzer ]]
horizontal_motor_prefix = "255idcVME:m1"
vertical_motor_prefix = "255idcVME:m1"
yaw_motor_prefix = "255idcVME:m1"
rowland_diameter = 0.5  # in m
lattice_constant = 0.543095  # in nm
wedge_angle = 30  # in degrees
surface_plane = "211"
name = "analyzer_crystal"


# Vacuum devices
# ==============
#
# These devices are mostly used for the baseline stream. The following
# examples create several QPC/MPC ion pump controllers, and some Televac
# ion gauges.

[[ vacuum_pumps ]]
ip1 = "255idVac:qpc01a"
ip6 = "255idVac:qpc03b"

[[ vacuum_gauges ]]
ig1 = "255idVac:VSA5"
ig2 = "255idVac:VSA9"
